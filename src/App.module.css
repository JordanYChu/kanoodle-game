.controlsContainer {
    position: fixed;
    top: 1rem;
    right: 1rem;
    z-index: 1100;
    display: flex;
    gap: 1rem;
}

.controlButton {
    background: white;
    border: 1px solid #ccc;
    border-radius: 1rem;
    padding: 0.5rem 1rem;
    line-height: 0.5rem;
    color: black;
    height: 2.5rem;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    cursor: pointer;
}

.controlButton:hover {
    background: #ccc;
}

.controlsSlideout {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 400px;
    max-width: 90vw;
    background: linear-gradient(120deg, #f8fafc 80%, #e0e7ef 100%);
    border-right: 2px solid #bcd;
    z-index: 1000;
    transform: translateX(-100%);
    transition: transform 0.35s cubic-bezier(.77,0,.18,1);
    display: flex;
    flex-direction: column;
    padding: 0;
}
.controlsSlideout.open {
    transform: translateX(0);
}
.controlsSlideout .controlsInfo {
    padding: 4rem 3rem;
}
.controlsToggleBtn {
    position: fixed;
    top: 1rem;
    left: 1rem;
    z-index: 1100;
    background: white;
    border: 1px solid #ccc;
    border-radius: 1rem;
    padding: 0.5rem;
    width: 2.5rem;
    line-height: 0.5rem;
    aspect-ratio: 1/1;
    color: black;
    cursor: pointer;
}
.controlsToggleBtn:hover {
    background: #ccc;
}
.controlsInfo {
    padding: 1rem;
    color: #234;
    text-align: left;
    display: flex;
    flex-direction: column;
}

.controlsInfo ul {
    padding: 0;
    list-style: disc inside;
}

.controlsInfo li {
    font-size: 1rem;
}
.game {
    overflow: hidden;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-rows: auto 1fr;
    justify-items: center;
    align-items: space-evenly;
    background: rgb(255, 255, 255)
}
.gameBoardContainer {
    display: inline-block;
    width: fit-content;
    padding: 1rem;
    border-radius: 2rem;
    border: solid 4px #ccc;
    margin: 4rem;
}
.gameBoard {
    display: inline-flex;
    flex-direction: column;
}

.gameBoardRow {
    display: flex;
}

.pieceSelectionArea {
    background: linear-gradient(to bottom, #f5f5f5, #e0e0e0);
    box-sizing: border-box;
    overflow: auto;
    border-top: 2px solid #ccc;
    padding: 1rem;
    width: 100% ;
    height: 100%;
    min-height: 0;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 16px;
    justify-content: center;
    align-items: flex-start;
    align-content: flex-start;
    scrollbar-width: thin;
    scrollbar-color: #bbb #f5f5f5;
}

.pieceSelectionArea::-webkit-scrollbar {
    height: 8px;
    width: 8px;
    background: #f5f5f5;
}
.pieceSelectionArea::-webkit-scrollbar-thumb {
    background: #bbb;
    border-radius: 4px;
}
.pieceSelectionArea::-webkit-scrollbar-corner {
    background: #f5f5f5;
}

.piece {
    display: inline-block;
}

.pieceRow {
    display: flex;
}

.cellContainer {
    position: relative;
    width: var(--cell-size);
    height: var(--cell-size);
}

.cellContainer > * {
    position: absolute;
}

.bridges {
    position: relative;
    height: 100%;
    width: 100%;
}

.bridges > * {
    position: absolute;
    /* border: #ffffff solid 2px; */
}

.bridgeLeft {
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: calc(var(--bridge-gap) * 2);
    height: var(--bridge-width);
}
.bridgeRight {
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    width: calc(var(--bridge-gap) * 2);
    height: var(--bridge-width);
}
.bridgeTop {
    left: 50%;
    top: 0;
    transform: translateX(-50%);
    height: calc(var(--bridge-gap) * 2) ;
    width: var(--bridge-width);
}
.bridgeBottom {
    left: 50%;
    bottom: 0;
    transform: translateX(-50%);
    height: calc(var(--bridge-gap) * 2) ;
    width: var(--bridge-width);
}

.pieceCell {
    margin: var(--bridge-gap);
    border-radius: 100%;
    width: calc(var(--cell-size) - var(--bridge-gap) * 2);
    height: calc(var(--cell-size) - var(--bridge-gap) * 2);
}


.emptyCell {
    margin: var(--bridge-gap);
    border-radius: 100%;
    width: calc(var(--cell-size) - var(--bridge-gap) * 2);
    height: calc(var(--cell-size) - var(--bridge-gap) * 2);
    background: transparent
}

.holeCell {
    background-color: #ccc;
    margin: var(--bridge-gap);
    border-radius: 100%;
    width: calc(var(--cell-size) - var(--bridge-gap) * 2);
    height: calc(var(--cell-size) - var(--bridge-gap) * 2);
}

.holeCell::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 100%;
    background: radial-gradient(circle at 36px 12px, #ffffff8a, transparent);
}

